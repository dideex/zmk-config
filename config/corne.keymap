/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  ESC  |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P    | BKSP |
            // | SHIFT |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ctrl |  ;   |
            // | TAB   |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |    /  |   \  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&kp ESC    &kp Q  &kp W  &kp E     &kp R  &kp T        &kp Y    &kp U  &kp I      &kp O    &kp P     &kp BSPC
&kp LSHFT  &kp A  &kp S  &kp D     &kp F  &kp G        &kp H    &kp J  &kp K      &kp L    &kp LCTRL  &kp SEMI
&kp TAB    &kp Z  &kp X  &kp C     &kp V  &kp B        &kp N    &kp M  &kp COMMA  &kp DOT  &kp FSLH  &kp BSLH
                         &kp LGUI  &mo 1  &kp SPACE    &kp RET  &mo 2  &kp RALT
            >;
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // |  ESC |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | SHIFT| ctrl | ctrl(shift(s)) | c(s(tab)) | c(tab) | ctrl(shift(e)) |   | LFT | DWN |  UP | RGT |  ctrl   |  del    |
            // | TAB  | undo  |  cut |  copy | past  | alt+tab  |   | HOME  |  PG_DN  |  PG_UP  |  END  |     |      | unlock
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp ESC    &kp N1     &kp N2      &kp N3    &kp N4     &kp N5     &kp N6     &kp N7     &kp N8     &kp N9       &kp N0       &kp BSPC
&kp LSHFT  &kp LCTRL  &trans    &trans &trans  &trans    &kp LEFT   &kp DOWN   &kp UP     &kp RIGHT    &kp LCTRL    &kp DEL
&kp TAB    &kp LC(Z)     &kp LC(X)      &kp LC(C)    &kp LC(V)     &trans     &kp HOME &kp PG_DN &kp PG_UP &kp END       &trans       &studio_unlock
                                        &kp LGUI      &trans        &kp SPACE       &kp RET   &trans    &kp RALT
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |  ESC |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | SHIFT |  '   |  "  |  {  |  }  |  _  |   |  -  |  =  |  [  |  ]  |  ctrl  |  ` |
            // | TAB |  F1  |  F2 |  F3 | F4  | F5  |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp ESC    &kp EXCL  &kp AT   &kp HASH  &kp DLLR  &kp PRCNT   &kp CARET  &kp AMPS   &kp KP_MULTIPLY  &kp LPAR  &kp RPAR  &kp BSPC
&kp LSHFT  &kp SQT   &kp DQT  &kp LBRC  &kp RBRC  &kp UNDER   &kp MINUS  &kp EQUAL  &kp LBKT         &kp RBKT  &kp LCTRL  &kp GRAVE
&kp TAB    &kp F1    &kp F2   &kp F3    &kp F4    &kp F6     &kp UNDER  &kp PLUS   &kp LBRC         &kp RBRC  &kp PIPE  &kp TILDE
                             &kp LGUI  &trans    &kp SPACE    &kp RET    &trans     &kp RALT
            >;
        };

        media_layer {
            // -----------------------------------------------------------------------------------------
            // |  ESC |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | SHIFT |  '   |  "  |  {  |  }  |  _  |   |  -  |  =  |  [  |  ]  |  ctrl  |  ` |
            // | TAB |  F1  |  F2 |  F3 | F4  | F5  |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp ESC    &kp EXCL  &kp AT   &kp HASH  &kp DLLR  &kp PRCNT   &kp CARET  &kp AMPS   &kp KP_MULTIPLY  &kp LPAR  &kp RPAR  &kp BSPC
&kp LSHFT  &kp SQT   &kp DQT  &kp C_BRI_UP  &kp C_VOL_UP  &kp UNDER   &kp MINUS  &kp EQUAL  &kp LBKT         &kp RBKT  &kp LCTRL  &kp GRAVE
&kp TAB    &kp F1    &kp F2   &kp C_BRI_DN  &kp C_VOL_DN    &kp F6      &bt BT_CLR &bt BT_PRV &bt BT_NXT &trans       &trans       &studio_unlock
                             &kp LGUI  &trans    &kp SPACE    &kp RET    &trans     &kp RALT
            >;
        };

    };
    
    conditional_layers {
        compatible = "zmk,conditional-layers";
        tri_layer {
            if-layers = <1 2>;
            then-layer = <3>;
        };
    };
};
